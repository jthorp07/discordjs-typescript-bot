import { readdirSync } from "fs";
import { join } from "path";
import { AnySelectMenuInteraction, Client, Collection, Events, Interaction } from "discord.js";
import { IButton } from "../../types/discord_interactions";
import { IEventHandler } from "../../types/event_handler";

function init(client: Client) {

    if (!client.isReady()) return;

    const buttons = new Collection<String, IButton>();
    const commandFiles = readdirSync(join(__dirname, "../../buttons")).filter(file => file.endsWith(".js"));

    for (const file of commandFiles) {

        const cmd: IButton = require(file) as IButton;
        try {
            console.log(`[Buttons]: Reading select menu ${cmd.customId}`);
            buttons.set(cmd.customId, cmd)
        } catch (error) {
            console.log(`[Buttons]: Error in file ${file}`);
            continue;
        }
    };

    return buttons;
}

const buttonEventHandler: IEventHandler = {
    event: Events.InteractionCreate,
    handlerFactory: (client: Client) => {
        const buttons = init(client);
        return async (interaction: Interaction) => {
            if (!interaction.isButton()) return
            let idArgs = interaction.id.split(':');
            if (!idArgs || idArgs.length === 0) {
                console.error(`[Error]: Select menu idArgs parsing error for ID ${interaction.id}`);
                return;
            }
            let cmd: IButton | undefined = buttons?.get(idArgs[0]);
            
            if (cmd === undefined) {
                await interaction.reply({content:'Unknown interaction. If a command or component generated by JerryBot generated this response, please report it!'})
                return;
            }
            await cmd.execute(interaction, idArgs);
        }
    }
}

export default buttonEventHandler;